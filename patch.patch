From ec4b88987eb05e5b8c1a44d5e63b08dae21928d0 Mon Sep 17 00:00:00 2001
From: drcmda <drcmda@gmail.com>
Date: Mon, 25 Feb 2013 16:50:22 +0000
Subject: [PATCH] PIE: compressed layout, stubs, new defaults

Change-Id: I6572adef19ee608fd09dc9f56e1b80123ede2b3d
---
 .../android/systemui/statusbar/PieControlPanel.java    |    4 ++--
 .../com/android/systemui/statusbar/view/PieMenu.java   |   16 +++++++++-------
 2 files changed, 11 insertions(+), 9 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/PieControlPanel.java b/packages/SystemUI/src/com/android/systemui/statusbar/PieControlPanel.java
index c0f03df..5f90f2f 100755
--- a/packages/SystemUI/src/com/android/systemui/statusbar/PieControlPanel.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/PieControlPanel.java
@@ -141,7 +141,7 @@ static public int findGravityOffset(int gravity) {
 
     public void bumpConfiguration() {
         if (Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.PIE_STICK, 0) == 1) {
+                    Settings.System.PIE_STICK, 1) == 1) {
 
             // Get original offset
             int gravityIndex = findGravityOffset(convertPieGravitytoGravity(
@@ -201,7 +201,7 @@ public void reorient(int orientation, boolean storeSetting) {
         if (storeSetting) {
             int gravityOffset = mOrientation;
             if (Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.PIE_STICK, 0) == 1) {
+                    Settings.System.PIE_STICK, 1) == 1) {
 
                 gravityOffset = findGravityOffset(mOrientation);
                 switch(mDisplay.getRotation()) {
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/view/PieMenu.java b/packages/SystemUI/src/com/android/systemui/statusbar/view/PieMenu.java
index eb0d64a..57aeb13 100755
--- a/packages/SystemUI/src/com/android/systemui/statusbar/view/PieMenu.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/view/PieMenu.java
@@ -279,7 +279,7 @@ private void getDimensions() {
         // Fetch modes
         boolean expanded = Settings.System.getInt(mContext.getContentResolver(),
                 Settings.System.EXPANDED_DESKTOP_STATE, 0) == 1;
-        mUseMenuAlways = Settings.System.getInt(mContext.getContentResolver(), Settings.System.PIE_MENU, 0) == 1;
+        mUseMenuAlways = Settings.System.getInt(mContext.getContentResolver(), Settings.System.PIE_MENU, 1) == 1;
         mUseSearch = Settings.System.getInt(mContext.getContentResolver(), Settings.System.PIE_SEARCH, 1) == 1;
         mNavbarZero = Integer.parseInt(ExtendedPropertiesUtils.getProperty(
                 "com.android.systemui.navbar.dpi", "100")) == 0 && !expanded;
@@ -288,7 +288,7 @@ private void getDimensions() {
         mPieSize = Settings.System.getFloat(mContext.getContentResolver(),
                 Settings.System.PIE_SIZE, 1f);
         mPieGap = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.PIE_GAP, 1);
+                Settings.System.PIE_GAP, 3);
         mHapticFeedback = Settings.System.getInt(mContext.getContentResolver(),
                 Settings.System.HAPTIC_FEEDBACK_ENABLED, 1) != 0;
 
@@ -479,6 +479,7 @@ private void getDimensions() {
 
     private void measureClock(String text) {
         mClockText = text;
+
         mClockTextAmPm = mPolicy.getAmPm();
         mClockTextAmPmSize = mAmPmPaint.measureText(mClockTextAmPm);
         mClockTextTotalOffset = 0;
@@ -771,7 +772,7 @@ protected void onDraw(Canvas canvas) {
                     mSnapBackground.setAlpha((int)(snap.alpha + (snap.active ? mAnimators[ANIMATOR_SNAP_GROW].fraction * 80 : 0)));
 
                     canvas.drawCircle (snap.x, snap.y, (snap.active ? mAnimators[ANIMATOR_SNAP_GROW].fraction *
-                            Math.max(getWidth(), getHeight()) : 0), mSnapBackground);
+                            Math.max(getWidth(), getHeight()) * 1.5f : 0), mSnapBackground);
 
                     float snapDistanceX = snap.x-mX;
                     float snapDistanceY = snap.y-mY;
@@ -856,11 +857,12 @@ protected void onDraw(Canvas canvas) {
                     state = canvas.save();
                     canvas.rotate(mPanel.getDegree() + 180 + (1-mAnimators[ANIMATOR_DEC_SPEED15].fraction) * 90, mCenter.x, mCenter.y);
                     if (mPolicy.supportsTelephony()) {
-                        canvas.drawTextOnPath(mPolicy.getNetworkProvider(), mStatusPath, 0, mStatusOffset * 3, mStatusPaint);
+                        canvas.drawTextOnPath(mPolicy.getNetworkProvider(), mStatusPath, 0, mStatusOffset * 4, mStatusPaint);
                     }
-                    canvas.drawTextOnPath(mPolicy.getSimpleDate(), mStatusPath, 0, mStatusOffset * 2, mStatusPaint);
-                    canvas.drawTextOnPath(mPolicy.getBatteryLevelReadable(), mStatusPath, 0, mStatusOffset * 1, mStatusPaint);
-                    canvas.drawTextOnPath(mPolicy.getWifiSsid(), mStatusPath, 0, mStatusOffset * 0, mStatusPaint);
+                    canvas.drawTextOnPath(mPolicy.getSimpleDate(), mStatusPath, 0, mStatusOffset * 3, mStatusPaint);
+                    canvas.drawTextOnPath(mPanel.getBar().getNotificationData().size() + " ONGOING EVENTS", mStatusPath, 0, mStatusOffset * 2, mStatusPaint);
+                    canvas.drawTextOnPath("CONNECTION: " + mPolicy.getWifiSsid(), mStatusPath, 0, mStatusOffset * 1, mStatusPaint);
+                    canvas.drawTextOnPath(mPolicy.getBatteryLevelReadable(), mStatusPath, 0, mStatusOffset * 0, mStatusPaint);
                     canvas.restoreToCount(state);
 
                     state = canvas.save();
-- 
1.7.10

